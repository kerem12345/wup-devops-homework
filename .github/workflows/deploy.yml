name: Deployment of the Application

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1                   
  ECR_REPOSITORY: wup_repo           
  ECS_SERVICE: wup_service              
  ECS_CLUSTER: wup_cluster                
  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    environment: production
    
    steps:
     - name: Setup Java with Gradle dependencies
     - uses: actions/checkout@v2
     - uses: actions/setup-java@v2
       with:
       distribution: 'temurin'
       java-version: '11'
       cache: 'gradle'
     - run: ./gradlew build --no-daemon
    

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIA343DTCDI2QZS2NVW
        aws-secret-access-key: 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
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t wup_repo .
        docker push wup_repo
        echo "::set-output name=image::wup_repo

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
